#!/bin/bash

# Copyright (C) 1994-2016 Altair Engineering, Inc.
# For more information, contact Altair at www.altair.com.
#
# This file is part of the PBS Professional ("PBS Pro") software.
#
# Open Source License Information:
#
# PBS Pro is free software. You can redistribute it and/or modify it under the
# terms of the GNU Affero General Public License as published by the Free
# Software Foundation, either version 3 of the License, or (at your option) any
# later version.
#
# PBS Pro is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License along
# with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Commercial License Information:
#
# The PBS Pro software is licensed under the terms of the GNU Affero General
# Public License agreement ("AGPL"), except where a separate commercial license
# agreement for PBS Pro version 14 or later has been executed in writing with Altair.
#
# Altair’s dual-license business model allows companies, individuals, and
# organizations to create proprietary derivative works of PBS Pro and distribute
# them - whether embedded or bundled with other software - under a commercial
# license agreement.
#
# Use of Altair’s trademarks, including but not limited to "PBS™",
# "PBS Professional®", and "PBS Pro™" and Altair’s logos is subject to Altair's
# trademark licensing policies.


if [ "${TRAVIS_PULL_REQUEST}" == "false" ]; then
    echo "no pull request found"
    exit 0
fi

gem install octokit
if [ $? -ne 0 ]; then
    exit 1
fi

cat >check_sign.rb <<-EOF
require 'octokit'
client = Octokit::Client.new
commits = client.pull_request_commits(ENV['TRAVIS_REPO_SLUG'], ENV['TRAVIS_PULL_REQUEST'], :accept => "application/vnd.github.cryptographer-preview")
is_verified = true
commits.each do |commit|
    unless commit[:commit][:verification][:verified]
        is_verified = false
    end
end

unless is_verified
    exit 1
else
    exit 0
end

EOF
ruby check_sign.rb

if [ $? -ne 0 ]; then
    echo "unsigned commits found in this pull request!" 1>&2
    exit 1
else
    exit 0
fi

